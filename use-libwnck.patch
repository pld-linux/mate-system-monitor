engineered from reverese patch

https://github.com/mate-desktop/mate-system-monitor/commit/3fa35a8281ee5088b7e2222b683e5d9191cfd902.patch

--- mate-system-monitor-1.5.1/configure.ac~	2013-01-17 21:28:52.000000000 +0200
+++ mate-system-monitor-1.5.1/configure.ac	2013-02-24 21:09:07.595604585 +0200
@@ -25,7 +25,7 @@
 MATE_COMPILE_WARNINGS
 
 GLIB_REQUIRED=2.28.0
-LIBMATEWNCK_REQUIRED=1.3.0
+LIBWNCK_REQUIRED=2.5.0
 LIBGTOP_REQUIRED=2.23.1
 GTK_REQUIRED=2.20.0
 MATE_ICON_THEME_REQUIRED=1.1.0
@@ -37,7 +37,7 @@
 DBUS_REQUIRED=0.7
 
 PKG_CHECK_MODULES(GMODULE,gmodule-2.0,[GMODULE_ADD="gmodule-2.0"],[GMODULE_ADD=""])
-PKG_CHECK_MODULES(PROCMAN,$GMODULE_ADD glib-2.0 >= $GLIB_REQUIRED libgtop-2.0 >= $LIBGTOP_REQUIRED libmatewnck >= $LIBMATEWNCK_REQUIRED gtk+-2.0 >= $GTK_REQUIRED mate-icon-theme >= $MATE_ICON_THEME_REQUIRED gtkmm-2.4 >= $GTKMM_REQUIRED libxml-2.0 >= $LIBXML_REQUIRED librsvg-2.0 >= $RSVG_REQUIRED glibmm-2.4 >= $GLIBMM_REQUIRED giomm-2.4 >= $GIOMM_REQUIRED dbus-glib-1 >= $DBUS_REQUIRED)
+PKG_CHECK_MODULES(PROCMAN,$GMODULE_ADD glib-2.0 >= $GLIB_REQUIRED libgtop-2.0 >= $LIBGTOP_REQUIRED libwnck-1.0 >= $LIBWNCK_REQUIRED gtk+-2.0 >= $GTK_REQUIRED mate-icon-theme >= $MATE_ICON_THEME_REQUIRED gtkmm-2.4 >= $GTKMM_REQUIRED libxml-2.0 >= $LIBXML_REQUIRED librsvg-2.0 >= $RSVG_REQUIRED glibmm-2.4 >= $GLIBMM_REQUIRED giomm-2.4 >= $GIOMM_REQUIRED dbus-glib-1 >= $DBUS_REQUIRED)
 
 
 AC_ARG_ENABLE(more-warnings,
--- mate-system-monitor-1.5.1/src/prettytable.cpp	2013-01-17 21:28:52.000000000 +0200
+++ mate-system-monitor-1.5.1-wnck/src/prettytable.cpp	2013-02-24 21:28:10.351724608 +0200
@@ -1,5 +1,6 @@
 #include <config.h>
-#include <libmatewnck/libmatewnck.h>
+#define WNCK_I_KNOW_THIS_IS_UNSTABLE
+#include <libwnck/libwnck.h>
 #include <dirent.h>
 #include <sys/stat.h>
 #include <stdio.h>
@@ -23,7 +24,7 @@
 
 PrettyTable::PrettyTable()
 {
-  MatewnckScreen* screen = matewnck_screen_get_default();
+  WnckScreen* screen = wnck_screen_get_default();
   g_signal_connect(G_OBJECT(screen), "application_opened",
 		   G_CALLBACK(PrettyTable::on_application_opened), this);
   g_signal_connect(G_OBJECT(screen), "application_closed",
@@ -37,17 +38,17 @@
 
 
 void
-PrettyTable::on_application_opened(MatewnckScreen* screen, MatewnckApplication* app, gpointer data)
+PrettyTable::on_application_opened(WnckScreen* screen, WnckApplication* app, gpointer data)
 {
   PrettyTable * const that = static_cast<PrettyTable*>(data);
   FILE *f;
 
-  pid_t pid = matewnck_application_get_pid(app);
+  pid_t pid = wnck_application_get_pid(app);
 
   if (pid == 0)
     return;
 
-  const char* icon_name = matewnck_application_get_icon_name(app);
+  const char* icon_name = wnck_application_get_icon_name(app);
 
 
   Glib::RefPtr<Gdk::Pixbuf> icon;
@@ -60,7 +61,7 @@
   }
 
   if (not icon) {
-    icon = Glib::wrap(matewnck_application_get_icon(app), /* take_copy */ true);
+    icon = Glib::wrap(wnck_application_get_icon(app), /* take_copy */ true);
     icon = icon->scale_simple(APP_ICON_SIZE, APP_ICON_SIZE, Gdk::INTERP_HYPER);
   }
 
@@ -82,16 +83,16 @@
       info->set_icon(icon);
       // move the ref to the map
       this->apps[pid] = icon;
-      procman_debug("MATEWNCK OK for %u", unsigned(pid));
+      procman_debug("WNCK OK for %u", unsigned(pid));
     }
 }
 
 
 
 void
-PrettyTable::on_application_closed(MatewnckScreen* screen, MatewnckApplication* app, gpointer data)
+PrettyTable::on_application_closed(WnckScreen* screen, WnckApplication* app, gpointer data)
 {
-  pid_t pid = matewnck_application_get_pid(app);
+  pid_t pid = wnck_application_get_pid(app);
 
   if (pid == 0)
     return;
@@ -161,7 +162,7 @@
 
 
 Glib::RefPtr<Gdk::Pixbuf>
-PrettyTable::get_icon_from_matewnck(const ProcInfo &info)
+PrettyTable::get_icon_from_wnck(const ProcInfo &info)
 {
   Glib::RefPtr<Gdk::Pixbuf> icon;
 
@@ -228,7 +229,7 @@
 
   if (getters.empty())
     {
-      getters.push_back(&PrettyTable::get_icon_from_matewnck);
+      getters.push_back(&PrettyTable::get_icon_from_wnck);
       getters.push_back(&PrettyTable::get_icon_from_theme);
       getters.push_back(&PrettyTable::get_icon_from_default);
       getters.push_back(&PrettyTable::get_icon_from_name);
--- mate-system-monitor-1.5.1/src/prettytable.h	2013-01-17 21:28:52.000000000 +0200
+++ mate-system-monitor-1.5.1-wnck/src/prettytable.h	2013-02-24 21:27:43.113798724 +0200
@@ -12,7 +12,8 @@
 #include <string>
 
 extern "C" {
-#include <libmatewnck/libmatewnck.h>
+#define WNCK_I_KNOW_THIS_IS_UNSTABLE
+#include <libwnck/libwnck.h>
 }
 
 #include "iconthemewrapper.h"
@@ -33,8 +34,8 @@
 
 private:
 
-  static void on_application_opened(MatewnckScreen* screen, MatewnckApplication* app, gpointer data);
-  static void on_application_closed(MatewnckScreen* screen, MatewnckApplication* app, gpointer data);
+  static void on_application_opened(WnckScreen* screen, WnckApplication* app, gpointer data);
+  static void on_application_closed(WnckScreen* screen, WnckApplication* app, gpointer data);
 
   void register_application(pid_t pid, Glib::RefPtr<Gdk::Pixbuf> icon);
   void unregister_application(pid_t pid);
@@ -42,7 +43,7 @@
 
   Glib::RefPtr<Gdk::Pixbuf> get_icon_from_theme(const ProcInfo &);
   Glib::RefPtr<Gdk::Pixbuf> get_icon_from_default(const ProcInfo &);
-  Glib::RefPtr<Gdk::Pixbuf> get_icon_from_matewnck(const ProcInfo &);
+  Glib::RefPtr<Gdk::Pixbuf> get_icon_from_wnck(const ProcInfo &);
   Glib::RefPtr<Gdk::Pixbuf> get_icon_from_name(const ProcInfo &);
   Glib::RefPtr<Gdk::Pixbuf> get_icon_for_kernel(const ProcInfo &);
   Glib::RefPtr<Gdk::Pixbuf> get_icon_dummy(const ProcInfo &);
--- mate-system-monitor-1.5.1/src/procman.h	2013-01-17 21:28:52.000000000 +0200
+++ mate-system-monitor-1.5.1-wnck/src/procman.h	2013-02-24 21:27:43.113798724 +0200
@@ -116,7 +116,7 @@
   gulong memwritable;
   gulong mem;
 
-  // matewnck gives an unsigned long
+  // wnck gives an unsigned long
   gulong memxserver;
 
   gulong start_time;
--- mate-system-monitor-1.5.1/src/proctable.cpp	2013-01-17 21:28:52.000000000 +0200
+++ mate-system-monitor-1.5.1-wnck/src/proctable.cpp	2013-02-24 21:27:43.113798724 +0200
@@ -512,9 +512,9 @@
 get_process_memory_info(ProcInfo *info)
 {
 	glibtop_proc_mem procmem;
-	MatewnckResourceUsage xresources;
+	WnckResourceUsage xresources;
 
-	matewnck_pid_read_resource_usage (gdk_screen_get_display (gdk_screen_get_default ()),
+	wnck_pid_read_resource_usage (gdk_screen_get_display (gdk_screen_get_default ()),
 				      info->pid,
 				      &xresources);
 
